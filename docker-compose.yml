version: "3"

services:
    mongo:
        container_name: mongo
        image: mongo
        volumes:
            - ./data:/data/db
        ports:
            - "27018:27017"
        networks: 
            - app-network
    redis:
        image: redis
        container_name: redis
        expose:
            - 6379
        networks: 
            - app-network
    server:
        build: 
            context: ./server
            dockerfile: Dockerfile
        ports:
            - "4000:4000"
        env_file: ./server/.env
        networks: 
            - app-network
        depends_on: 
            - mongo
            - redis
    server_1:
        build: 
            context: ./server
            dockerfile: Dockerfile
        ports:
            - "4001:4000"
        env_file: ./server/.env
        networks: 
            - app-network
        depends_on: 
            - mongo
            - redis
    client:
        build: 
            context: ./client
            dockerfile: Dockerfile
        # ports: 
        #     - "3000:3000"
        env_file: ./client/.env
        # volumes:
        #     - ./client/:/usr/app
        #     - /usr/app/node_modules
        networks: 
            - app-network
    webserver:
        build: 
            context: ./nginx-proxy
            dockerfile: Dockerfile
        container_name: webserver
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            # - ./client/build:/usr/share/nginx/html
            # - ./nginx-proxy:/etc/nginx/conf.d
            - ./nginx-proxy:/etc/ssl/certs
            - ./nginx-proxy:/etc/ssl/private
            # - web-root:/var/www/html
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/lib/letsencrypt
            # - dhparam:/etc/ssl/certs
        networks: 
            - app-network
        depends_on: 
            - client
            - server
        
    certbot:
        image: certbot/certbot
        container_name: certbot
        volumes:
            - certbot-etc:/etc/letsencrypt
            - certbot-var:/var/lib/letsencrypt
            - web-root:/var/www/html
        depends_on:
            - webserver
        command: certonly --webroot --webroot-path=/var/www/html --email nitinpandey3004@gmail.com --agree-tos --no-eff-email --staging -d example.com  -d www.example.com
        networks: 
            - app-network


networks:
    app-network:
        driver: bridge

volumes: 
    certbot-etc:
    certbot-var:
    web-root:
        driver: local
        driver_opts:
            type: none
            device: /home/nitinpa/Learning Projects/Chatter/views/
            o: bind
    # dhparam:
    #     driver: local
    #     driver_opts:
    #         type: none
    #         device: /home/nitinpa/Learning Projects/Chatter/dhparam/
    #         o: bind